name: Deploy

on:
    workflow_dispatch:
    pull_request:
      types: [opened, synchronize, reopened]  

env:
  CARGO_TERM_COLOR: always
  ECR_LGPD_API_REPOSITORY: lgpd_api
  EKS_CLUSTER_NAME: tech-challenge
  AWS_REGION: us-east-1

jobs:
  deploy:
    name: Deploy LGPD App
    runs-on: ubuntu-latest

    steps:

    - name: Set short git commit SHA
      id: commit
      uses: prompt/actions-commit-hash@v2

    - name: Check out code
      uses: actions/checkout@v2
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{env.AWS_REGION}}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}        
        IMAGE_TAG: ${{ steps.commit.outputs.short }}
      run: |
        docker pull alanmmolina/lgpd-tech-challenge
        docker tag alanmmolina/lgpd-tech-challenge $ECR_REGISTRY/$ECR_LGPD_API_REPOSITORY:latest
        docker push $ECR_REGISTRY/$ECR_LGPD_API_REPOSITORY:latest

    - name: Update kube config
      run: aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --region $AWS_REGION

    - name: Deploy to EKS
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}        
        IMAGE_TAG: ${{ steps.commit.outputs.short }}
      run: |
        kubectl apply -f k8s/configmap.yaml
        sed -i.bak "s|DOCKER_IMAGE|$ECR_REGISTRY/$ECR_LGPD_API_REPOSITORY:latest|g" k8s/lgpd-deployment.yaml && \
        kubectl apply -f k8s/lgpd-deployment.yaml
        kubectl apply -f k8s/lgpd-svc.yaml
